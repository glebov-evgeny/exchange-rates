{"ast":null,"code":"var _jsxFileName = \"/Users/evgeniy/Desktop/portfolio/quest/src/components/Courses/Courses.jsx\";\nimport { CoursesItem } from \"../CoursesItem/CoursesItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Courses({\n  courses\n}) {\n  // for (let i in courses.keys){\n  //   console.log(i)\n  // }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"courses\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u041A\\u0443\\u0440\\u0441\\u044B \\u0432\\u0430\\u043B\\u044E\\u0442:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"courses.entries(a).map(([key, value]) => \", /*#__PURE__*/_jsxDEV(CoursesItem, {}, courses.Name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, this) // Pretty straightforward - use key for the key and value for the value.\n        // Just to clarify: unlike object destructuring, the parameter names don't matter here.\n        , \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Courses;\nexport { Courses };\n\nvar _c;\n\n$RefreshReg$(_c, \"Courses\");","map":{"version":3,"sources":["/Users/evgeniy/Desktop/portfolio/quest/src/components/Courses/Courses.jsx"],"names":["CoursesItem","Courses","courses","Name"],"mappings":";AAAA,SAASA,WAAT,QAA4B,4BAA5B;;;AACA,SAASC,OAAT,CAAiB;AAACC,EAAAA;AAAD,CAAjB,EAA4B;AAE1B;AACA;AACA;AAEA,sBACE;AAAS,IAAA,SAAS,EAAC,SAAnB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEI;AAAA,6EAEE,QAAC,WAAD,MAAkBA,OAAO,CAACC,IAA1B;AAAA;AAAA;AAAA;AAAA,gBAFF,CAGI;AACA;AAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;KAtBQF,O;AAwBT,SAASA,OAAT","sourcesContent":["import { CoursesItem } from \"../CoursesItem/CoursesItem\";\nfunction Courses({courses}) {\n\n  // for (let i in courses.keys){\n  //   console.log(i)\n  // }\n\n  return (\n    <section className=\"courses\">\n      <div className=\"container\">\n        <p>Курсы валют:</p>\n          <div>\n          courses.entries(a).map(([key, value]) => {\n            <CoursesItem key={courses.Name}  />\n              // Pretty straightforward - use key for the key and value for the value.\n              // Just to clarify: unlike object destructuring, the parameter names don't matter here.\n          })\n          {/* <CoursesItem key={courses.Name}  />{courses.Name} */}\n\n          </div>\n      </div>\n    </section>\n  );\n}\n\nexport { Courses };\n"]},"metadata":{},"sourceType":"module"}